{"version":3,"sources":["webpack:///./component/loan/bindingIdForm.js?5206","webpack:///./component/loan/loanAccount.js?3b32","webpack:///./redux/ducks/ducks.js?e9d1","webpack:///./redux/ducks/loan.js?fa95","webpack:///./redux/saga/loanSagas.js?8a8e"],"names":["FormItem","Form","Item","BindingIdForm","props","handleSubmit","bind","event","preventDefault","form","validateFields","err","values","citizenId","customerInfo","id","platform","value","postJSON","fetchLoan","console","error","log","getFieldDecorator","textAlign","rules","required","message","validator","validCitizenId","color","WrappedBindingIdForm","create","connect","LoanAccount","columns","dataIndex","key","align","render","name","record","firstName","lastName","state","loanData","setState","data","loans","undefined","length","cursor","onClick","handleClickRow","chats","mapStateToProps","loan","chat","rootReducer","combineReducers","auth","cookie","loanReducer","defaultState","FETCH_LOAN","FETCH_LOAN_SUCCESS","FETCH_LOAN_FAILURE","BIND_ID","BIND_ID_SUCCESS","BIND_ID_FAILURE","type","payload","fetchLoanSuccess","fetchLoanFailure","code","bindId","bindIdSuccess","bindIdFailure","initialState","loading","reducer","action","fetchLoanSaga","loanSagas","call","put","all","takeLatest"],"mappings":"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","file":"3.3a7e171d83c15d5f8e3e.hot-update.js","sourcesContent":["import { Component } from 'react'\nimport { Form, Icon, Input, Button } from 'antd'\nimport { connect } from 'react-redux';\nimport {API_SERVER , postJSON} from '../../tools/api'\nimport {validCitizenId} from '../../tools/validators'\nimport { fetchLoan } from '../../redux/ducks/loan'\n\nconst FormItem = Form.Item;\n\nclass BindingIdForm extends Component {\n\n    constructor(props){\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    \n    handleSubmit(event) {\n        event.preventDefault()\n        this.props.form.validateFields(async(err, values) => {\n            if (!err) {\n                const {citizenId} = values\n                const { id , platform } = this.props.customerInfo\n                try{\n                    const value = {\n                        id: id,\n                        citizenId : citizenId,\n                        platform: platform\n                    }\n                    await postJSON(\n                        `${API_SERVER}/chats/line/binding`,\n                        value\n                    )\n                    this.props.fetchLoan({id})\n                }\n                catch(error){\n                    console.error(error)\n                }\n            }\n            else{\n                console.log('Error')\n            }\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form\n        return (\n          <Form onSubmit={this.handleSubmit} style={{textAlign:'center'}} >\n            <br/>\n            <p>ลูกต้าไม่มีประวัติ</p>\n            <br/>\n            <FormItem>\n              {getFieldDecorator('citizenId', {\n                rules: [\n                    { \n                        required: true, \n                        message: 'โปรดใส่เลขบัตรประชาชนของลูกค้า' \n                    },\n                    {\n                        validator: validCitizenId\n                    }\n                ],\n              })(\n                <Input prefix={<Icon type=\"idcard\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"บัตรประชาชนของลูกค้า\" />\n              )}\n            </FormItem>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Binding CitizenId\n            </Button>\n          </Form>\n        );\n    }\n    \n}\nconst WrappedBindingIdForm = Form.create()(BindingIdForm);\nexport default connect(\n    null,\n    {fetchLoan}\n)(WrappedBindingIdForm)\n\n\n// WEBPACK FOOTER //\n// ./component/loan/bindingIdForm.js","import { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Table} from 'antd';\nimport { fetchLoan } from '../../redux/ducks/loan'\nimport LoanInfo from './loanInfo'\nimport BindingIdForm from './bindingIdForm'\n\nclass LoanAccount extends Component {\n    constructor(props){\n        super(props)\n        this.columns=[\n            {\n                dataIndex: 'loanId',\n                key: 'loanId',\n                align:'center'\n            }, \n            {\n                render: record => {\n                    const name = `${record.firstName} ${record.lastName}`\n                    return name\n                }\n            }\n        ]\n        this.state = {\n            loanData : ''\n        }\n    }\n    componentDidMount() {\n        this.props.fetchLoan({\n            id : 'Uc72aacda842257e6ae27f0bb8d80cc13'\n        })\n    }\n\n    handleClickRow(record) {\n        this.setState({\n            loanData : record\n        })\n    }\n\n    render(){\n        const {data} = this.props.loans\n        if(data !== undefined){\n            if(!data.length == 0){\n                return (\n                    <div>\n                    <Table \n                        style = {{cursor: 'pointer'}}\n                        dataSource={ data } \n                        columns={this.columns} \n                        pagination={false}\n                        onRow={record => {\n                            return {\n                                onClick: () => {\n                                    this.handleClickRow(record)\n                                },\n                            }\n                        }}\n                    />\n                    <br/>\n                    <LoanInfo loanData = {this.state.loanData} />\n                    </div>\n                )\n            }\n            return <BindingIdForm customerInfo={this.props.chats.data.customerInfo}/>\n        }\n        return <div>LOADING</div>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      loans : state.loan,\n      chats : state.chat\n    }\n}\nexport default connect(\n    mapStateToProps,\n    {fetchLoan}\n)(LoanAccount)\n\n\n// WEBPACK FOOTER //\n// ./component/loan/loanAccount.js","import { combineReducers } from 'redux'\nimport authReducer from './auth'\nimport cookieReducer from './cookie'\nimport chatReducer from './chat'\nimport loanReducer from './loan'\n\nexport const rootReducer = combineReducers({\n    auth : authReducer,\n    cookie: cookieReducer,\n    chat : chatReducer,\n    loan : loanReducer\n})\n\nexport const defaultState = {}\n\n\n// WEBPACK FOOTER //\n// ./redux/ducks/ducks.js","export const FETCH_LOAN = 'ittp-chat/chat/FETCH_LOAN'\nconst FETCH_LOAN_SUCCESS = 'ittp-chat/chat/FETCH_LOAN_SUCCESS'\nconst FETCH_LOAN_FAILURE = 'ittp-chat/chat/FETCH_LOAN_FAILURE'\n\nexport const BIND_ID = 'ittp-chat/chat/BIND_ID'\nconst BIND_ID_SUCCESS = 'ittp-chat/chat/BIND_ID_SUCCESS'\nconst BIND_ID_FAILURE = 'ittp-chat/chat/BIND_ID_FAILURE'\n\nexport const fetchLoan = ({id}) => {\n    return{\n        type: FETCH_LOAN,\n        payload: {id}\n    }\n}\n\nexport const fetchLoanSuccess = ({ data }) => {\n    return{\n        type:FETCH_LOAN_SUCCESS,\n        payload: {data}\n    }\n}\n\nexport const fetchLoanFailure = () => ({\n    type:FETCH_LOAN_FAILURE,\n    payload:{ code, message }\n})\n\nexport const bindId = ({ id , citizenId , platform }) => ({\n    type:BIND_ID,\n    payload:{id , citizenId , platform}\n})\n\nexport const bindIdSuccess = ({ data }) => {\n    return{\n        type:BIND_ID_SUCCESS,\n        payload: {data}\n    }\n}\n\nexport const bindIdFailure = ({ data }) => {\n    return{\n        type:BIND_ID_FAILURE,\n    payload:{ code, message }\n    }\n}\n\nconst initialState = {\n    error: {},\n    loading: false\n}\n\nconst reducer = (state = initialState, action = {}) => {\n    switch(action.type){\n        case FETCH_LOAN: {\n            console.log('fetch loan reducer',action)\n            return {\n                ...state,\n                loading: true,\n            }\n        }\n        case FETCH_LOAN_SUCCESS: {\n            const {data} = action.payload\n            return {\n                ...state,\n                loading: false,\n                data: data\n            }\n        }\n        case FETCH_LOAN_FAILURE: {\n            return {\n                ...state,\n                loading: false,\n                error: {\n                  code: action.payload.code,\n                  message: action.payload.message\n                }\n            }\n        }\n        case BIND_ID: {\n            return {\n                ...state,\n                loading: true\n            }\n        }\n        case BIND_ID_SUCCESS: {\n            const {data} = action.payload\n            return {\n                ...state,\n                loading : false,\n                data : data\n            }\n        }\n        case BIND_ID_FAILURE: {\n            return {\n                ...state,\n                loading: false,\n                error: {\n                  code: action.payload.code,\n                  message: action.payload.message\n                }\n            }\n        }\n        default:\n            return state\n    }\n}\nexport default reducer\n\n\n// WEBPACK FOOTER //\n// ./redux/ducks/loan.js","import {takeLatest,all,call,put} from 'redux-saga/effects'\nimport {\n    FETCH_LOAN,\n    fetchLoanSuccess,\n    fetchLoanFailure,\n    BIND_ID,\n    bindId,\n    bindIdSuccess,\n    bindIdFailure\n} from '../ducks/loan'\nimport {\n    API_SERVER,\n    getJSON,\n} from '../../tools/api'\n\nexport function* fetchLoanSaga(action){\n    const {id} = action.payload\n    //use api to fetch data from apiV2\n    try {\n        const data = yield call(\n            getJSON,\n            `${API_SERVER}/chats/${id}`\n        )\n        yield put(fetchLoanSuccess({ data }))\n    }\n    catch(error){\n        const { code, message } = error\n        yield put(fetchLoanFailure({ code, message }))\n    }\n}\n\n// ยังเขียนไม่เสร์จ\n// export function* bindIdSaga(action){\n//     const {id , citizenId , platform} = action.payload\n//     //use api to bind LINE/FACEBOOK ID with customerCitizenId\n//     try{\n//         const value = {\n//             id: id,\n//             citizenId : citizenId,\n//             platform: platform\n//         }\n//         postJSON(\n//             `${API_SERVER}/chats/line/binding`,\n//             value\n//         )\n//         yield put(bindIdSuccess({data}))\n//     }\n//     catch(error){\n//         console.error(error)\n//     }\n// }\n\n\n\nexport function* loanSagas() {\n    yield all([\n        takeLatest(FETCH_LOAN, fetchLoanSaga),\n        // takeLatest(BIND_ID, bindIdSaga)\n    ])\n}\n\n\n// WEBPACK FOOTER //\n// ./redux/saga/loanSagas.js"],"sourceRoot":""}