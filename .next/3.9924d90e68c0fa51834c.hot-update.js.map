{"version":3,"sources":["webpack:///./component/loan/bindingIdForm.js?5206","webpack:///./tools/validators.js?07b7"],"names":["FormItem","Form","Item","BindingIdForm","handleSubmit","event","preventDefault","props","form","validateFields","err","values","citizenId","customerInfo","id","platform","postJSON","console","log","getFieldDecorator","textAlign","rules","required","message","validator","validCitizenId","color","create","rule","value","callback","i","sum","undefined","length","parseFloat","charAt","validDate","date","split","year","birthDate","moment","isValid","birthYear"],"mappings":"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","file":"3.9924d90e68c0fa51834c.hot-update.js","sourcesContent":["import { Component } from 'react'\nimport { Form, Icon, Input, Button } from 'antd'\nimport {API_SERVER , postJSON} from '../../tools/api'\nimport {validCitizenId} from '../../tools/validators'\n\nconst FormItem = Form.Item;\n\nclass BindingIdForm extends Component {\n    \n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const {citizenId} = values\n                const { id , platform } = this.props.customerInfo\n\n                postJSON\n            }\n            else{\n                console.log('ERROR')\n            }\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form\n        return (\n          <Form onSubmit={this.handleSubmit} style={{textAlign:'center'}} >\n            <br/>\n            <p>ลูกต้าไม่มีประวัติ</p>\n            <br/>\n            <FormItem>\n              {getFieldDecorator('citizenId', {\n                rules: [\n                    { \n                        required: true, \n                        message: 'โปรดใส่เลขบัตรประชาชนของลูกค้า' \n                    },\n                    {\n                        validator: validCitizenId\n                    }\n                ],\n              })(\n                <Input prefix={<Icon type=\"idcard\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"บัตรประชาชนของลูกค้า\" />\n              )}\n            </FormItem>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Binding CitizenId\n            </Button>\n          </Form>\n        );\n    }\n    \n}\nexport default Form.create()(BindingIdForm);\n\n\n// WEBPACK FOOTER //\n// ./component/loan/bindingIdForm.js","import moment from 'moment'\n\nexport const validCitizenId = (rule, value, callback) => {\n  let i = 0\n  let sum = 0\n  const id = value\n  if (id !== undefined) {\n    if (id.length < 13) callback('กรุณากรอกรหัสบัตรประชาชนให้ครบ 13 หลัก')\n    for (i = 0, sum = 0; i < 12; i += 1)\n      sum += parseFloat(id.charAt(i)) * (13 - i)\n    if ((11 - (sum % 11)) % 10 !== parseFloat(id.charAt(12))) {\n      callback('รหัสบัตรประชาชนไม่ถูกต้องกรุณากรอกใหม่อีกครั้ง')\n    }\n  }\n  callback()\n}\nexport const validDate = (rule, value, callback) => {\n  // Not yet complete YYYY-MM-DD\n  if (value === undefined) {\n    callback()\n  } else if (value.length < 10) {\n    callback('กรุณากรอกวันที่เดือนปี เช่น 13-07-2526')\n  } else {\n    // Accept only YYYY-MM-DD\n    const date = value.split('-')\n    const year = (date[2] - 543) % 4\n    const birthDate = moment(value, 'YYYY-MM-DD', true)\n    if (!birthDate.isValid()) {\n      // Our system will convert DD-MM-YYYY to YYYY-MM-DD\n      if (date[0] > 0 && date[0] <= 29 && date[1] === '02' && year === 0) {\n        callback()\n      }\n      callback('กรุณากรอกวันที่เดือนปี เช่น 13-07-2526')\n    } else {\n      const birthYear = birthDate.year()\n      if (birthYear < 1900) {\n        callback('กรุณากรอกปี พ.ศ.')\n      }\n      callback()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./tools/validators.js"],"sourceRoot":""}