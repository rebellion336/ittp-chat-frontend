{"version":3,"sources":["webpack:///./component/chat/MessageField.js?54a8"],"names":["MessageField","props","columns","dataIndex","key","align","socket","io","on","fetchChat","id","platform","chatData","chats","data","undefined","chat","width","y","mapStateToProps","state","connect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMA,Y;;;AACF,0BAAYC,KAAZ,EAAkB;AAAA;;AAAA,gIACRA,KADQ;;AAEd,cAAKC,OAAL,GAAa,CACT;AACIC,uBAAW,iBADf;AAEIC,iBAAK;AAFT,SADS,EAKT;AACID,uBAAW,iBADf;AAEIC,iBAAK,iBAFT;AAGIC,mBAAM;AAHV,SALS,CAAb;AAWA,cAAKC,MAAL,GAAc,wDAAAC,CAAG,8DAAH,CAAd;;AAEA,cAAKD,MAAL,CAAYE,EAAZ,CAAe,iBAAf,EAAkC,YAAI;AAClC,kBAAKP,KAAL,CAAWQ,SAAX,CAAqB;AACjBC,oBAAK,mCADY;AAEjBC,0BAAU;AAFO,aAArB;AAIH,SALD;AAfc;AAqBjB;;;;4CACmB;AAChB,iBAAKV,KAAL,CAAWQ,SAAX,CAAqB;AACjBC,oBAAK,mCADY;AAEjBC,0BAAU;AAFO,aAArB;AAIH;;;iCACO;AACJ,gBAAIC,WAAW,EAAf;AACA,gBAAG,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,IAAjB,KAA0BC,SAA7B,EAAuC;AACnCH,2BAAW,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,IAAjB,CAAsBE,IAAjC;AACH;;AAED,mBACI;AAAA;AAAA,kBAAK,OAAO,EAACC,OAAM,MAAP,EAAZ;AAAA;AAAA;AAAA;AAAA;AACA,4EAAC,mDAAD,IAAO,YAAaL,QAApB,EAA+B,SAAS,KAAKV,OAA7C,EAAsD,YAAY,KAAlE,EAAyE,QAAQ,EAAEgB,GAAG,GAAL,EAAjF;AAAA;AAAA;AAAA;AAAA,kBADA;AAEA,4EAAC,4DAAD,IAAY,OAAO,KAAKjB,KAAL,CAAWY,KAAX,CAAiBC,IAApC;AAAA;AAAA;AAAA;AAAA;AAFA,aADJ;AAQH;;;;;;;;;EA3CsB,gD;;AA6C3B,IAAMK,kBAAkB,SAAlBA,eAAkB,QAAS;AAC7B,WAAO;AACLN,eAAQO,MAAMJ;AADT,KAAP;AAGH,CAJD;;eAMe,4DAAAK,CACXF,eADW,EAEX,EAACV,WAAA,oEAAD,EAFW,EAGbT,YAHa,C;;AAAf;;;;;;;;;;;;4BAnDMA,Y;4BA6CAmB,e","file":"3.17ee961b41bd2e0e0b89.hot-update.js","sourcesContent":["import { Component } from 'react'\nimport { Table} from 'antd';\nimport { connect } from 'react-redux';\nimport Inputfield from './inputfield'\nimport { fetchChat } from '../../redux/ducks/chat'\nimport io from 'socket.io-client'\nimport {API_SERVER} from '../../tools/api'\n\nclass MessageField extends Component {\n    constructor(props){\n        super(props)\n        this.columns=[\n            {\n                dataIndex: 'customerMessage',\n                key: 'customerMessage',\n            }, \n            {\n                dataIndex: 'operatorMessage',\n                key: 'operatorMessage',\n                align:'right'\n            }\n        ]\n        this.socket = io(API_SERVER)\n\n        this.socket.on('RECEIVE_MESSAGE', ()=>{\n            this.props.fetchChat({\n                id : 'Uc72aacda842257e6ae27f0bb8d80cc13',\n                platform: 'line'\n            }) \n        })\n    }\n    componentDidMount() {\n        this.props.fetchChat({\n            id : 'Uc72aacda842257e6ae27f0bb8d80cc13',\n            platform: 'line'\n        })\n    }\n    render(){\n        let chatData = ''\n        if(this.props.chats.data !== undefined){\n            chatData = this.props.chats.data.chat\n        }\n        \n        return (\n            <div style={{width:'100%'}}>\n            <Table dataSource={ chatData } columns={this.columns} pagination={false} scroll={{ y: 600 }}/>\n            <Inputfield chats={this.props.chats.data}/>\n            </div>\n        )\n        \n\n    }\n}\nconst mapStateToProps = state => {\n    return {\n      chats : state.chat\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    {fetchChat}\n)(MessageField)\n\n\n// WEBPACK FOOTER //\n// ./component/chat/MessageField.js"],"sourceRoot":""}