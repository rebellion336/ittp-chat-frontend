{"version":3,"sources":["webpack:///./component/loan/bindingIdForm.js?5206","webpack:///./component/loan/loanAccount.js?3b32"],"names":["FormItem","Form","Item","BindingIdForm","props","state","citizenId","getFieldDecorator","form","handleSubmit","rules","required","message","color","valuePropName","initialValue","create","NormalLoginForm","LoanAccount","columns","dataIndex","key","align","render","name","record","firstName","lastName","loanData","fetchLoan","id","setState","data","loans","undefined","length","cursor","onClick","handleClickRow","mapStateToProps","loan","connect"],"mappings":"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","file":"3.ac78684f4b4b8c44da25.hot-update.js","sourcesContent":["import { Component } from 'react'\nimport { Form, Icon, Input, Button, Checkbox } from 'antd'\n\nconst FormItem = Form.Item;\n\nclass BindingIdForm extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            citizenId : ''\n        }\n    }\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <FormItem>\n              {getFieldDecorator('userName', {\n                rules: [{ required: true, message: 'Please input your username!' }],\n              })(\n                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('password', {\n                rules: [{ required: true, message: 'Please input your Password!' }],\n              })(\n                <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('remember', {\n                valuePropName: 'checked',\n                initialValue: true,\n              })(\n                <Checkbox>Remember me</Checkbox>\n              )}\n              <a className=\"login-form-forgot\" href=\"\">Forgot password</a>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Log in\n              </Button>\n              Or <a href=\"\">register now!</a>\n            </FormItem>\n          </Form>\n        );\n    }\n    \n}\nexport default Form.create()(NormalLoginForm);\n// export default BindingIdForm\n\n\n// WEBPACK FOOTER //\n// ./component/loan/bindingIdForm.js","import { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Table} from 'antd';\nimport { fetchLoan } from '../../redux/ducks/loan'\nimport LoanInfo from './loanInfo'\nimport BindingIdForm from './bindingIdForm'\n\nclass LoanAccount extends Component {\n    constructor(props){\n        super(props)\n        this.columns=[\n            {\n                dataIndex: 'loanId',\n                key: 'loanId',\n                align:'center'\n            }, \n            {\n                render: record => {\n                    const name = `${record.firstName} ${record.lastName}`\n                    return name\n                }\n            }\n        ]\n        this.state = {\n            loanData : ''\n        }\n    }\n    componentDidMount() {\n        this.props.fetchLoan({\n            id : 'Uc72aacda842257e6ae27f0bb8d80cc13'\n        })\n    }\n\n    handleClickRow(record) {\n        this.setState({\n            loanData : record\n        })\n    }\n\n    render(){\n        const {data} = this.props.loans\n        if(data !== undefined){\n            if(!data.length == 0){\n                return (\n                    <div>\n                    <Table \n                        style = {{cursor: 'pointer'}}\n                        dataSource={ data } \n                        columns={this.columns} \n                        pagination={false}\n                        onRow={record => {\n                            return {\n                                onClick: () => {\n                                    this.handleClickRow(record)\n                                },\n                            }\n                        }}\n                    />\n                    <br/>\n                    <LoanInfo loanData = {this.state.loanData} />\n                    </div>\n                )\n            }\n            return <BindingIdForm />\n        }\n        return <div>LOADING</div>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      loans : state.loan\n    }\n}\nexport default connect(\n    mapStateToProps,\n    {fetchLoan}\n)(LoanAccount)\n\n\n// WEBPACK FOOTER //\n// ./component/loan/loanAccount.js"],"sourceRoot":""}