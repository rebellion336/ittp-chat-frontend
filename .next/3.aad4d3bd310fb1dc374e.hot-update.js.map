{"version":3,"sources":["webpack:///./component/loan/bindingIdForm.js?5206"],"names":["FormItem","Form","Item","BindingIdForm","handleSubmit","event","preventDefault","props","form","validateFields","err","values","citizenId","customerInfo","id","platform","error","console","log","getFieldDecorator","textAlign","rules","required","message","validator","validCitizenId","color","create"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,IAAMA,WAAW,kDAAAC,CAAKC,IAAtB;;IAEMC,a;;;;;;;;;;;;;;wMAEFC,Y,GAAe,UAACC,KAAD,EAAW;AACtBA,kBAAMC,cAAN;AACA,kBAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC5C,oBAAI,CAACD,GAAL,EAAU;AACN,wBAAG;AAAA,4BACQE,SADR,GACqBD,MADrB,CACQC,SADR;AAAA,oDAE2B,MAAKL,KAAL,CAAWM,YAFtC;AAAA,4BAESC,EAFT,yBAESA,EAFT;AAAA,4BAEcC,QAFd,yBAEcA,QAFd;AAGF,qBAHD,CAIA,OAAMC,KAAN,EAAY;AACRC,gCAAQD,KAAR,CAAcA,KAAd;AACH;AACJ,iBARD,MASI;AACAC,4BAAQC,GAAR,CAAY,OAAZ;AACH;AACJ,aAbD;AAcH,S;;;;;iCAEQ;AAAA,gBACGC,iBADH,GACyB,KAAKZ,KAAL,CAAWC,IADpC,CACGW,iBADH;;AAEL,mBACE;AAAC,kEAAD;AAAA,kBAAM,UAAU,KAAKf,YAArB,EAAmC,OAAO,EAACgB,WAAU,QAAX,EAA1C;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF;AAGE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAIE;AAAC,4BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACGD,sCAAkB,WAAlB,EAA+B;AAC9BE,+BAAO,CACH;AACIC,sCAAU,IADd;AAEIC,qCAAS;AAFb,yBADG,EAKH;AACIC,uCAAW,yEAAAC;AADf,yBALG;AADuB,qBAA/B,EAWC,4DAAC,mDAAD,IAAO,QAAQ,4DAAC,kDAAD,IAAM,MAAK,QAAX,EAAoB,OAAO,EAAEC,OAAO,iBAAT,EAA3B;AAAA;AAAA;AAAA;AAAA,0BAAf,EAA4E,aAAY,0HAAxF;AAAA;AAAA;AAAA;AAAA,sBAXD;AADH,iBAJF;AAmBE;AAAC,wEAAD;AAAA,sBAAQ,MAAK,SAAb,EAAuB,UAAS,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBF,aADF;AAyBH;;;;;;;;;EA/CuB,gD;;eAkDb,kDAAAzB,CAAK0B,MAAL,GAAcxB,aAAd,C;;AAAf;;;;;;;;;;;;4BApDMH,Q;4BAEAG,a","file":"3.aad4d3bd310fb1dc374e.hot-update.js","sourcesContent":["import { Component } from 'react'\nimport { Form, Icon, Input, Button } from 'antd'\nimport {API_SERVER , postJSON} from '../../tools/api'\nimport {validCitizenId} from '../../tools/validators'\n\nconst FormItem = Form.Item;\n\nclass BindingIdForm extends Component {\n    \n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                try{\n                    const {citizenId} = values\n                    const { id , platform } = this.props.customerInfo\n                }\n                catch(error){\n                    console.error(error)\n                }\n            }\n            else{\n                console.log('ERROR')\n            }\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form\n        return (\n          <Form onSubmit={this.handleSubmit} style={{textAlign:'center'}} >\n            <br/>\n            <p>ลูกต้าไม่มีประวัติ</p>\n            <br/>\n            <FormItem>\n              {getFieldDecorator('citizenId', {\n                rules: [\n                    { \n                        required: true, \n                        message: 'โปรดใส่เลขบัตรประชาชนของลูกค้า' \n                    },\n                    {\n                        validator: validCitizenId\n                    }\n                ],\n              })(\n                <Input prefix={<Icon type=\"idcard\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"บัตรประชาชนของลูกค้า\" />\n              )}\n            </FormItem>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Binding CitizenId\n            </Button>\n          </Form>\n        );\n    }\n    \n}\nexport default Form.create()(BindingIdForm);\n\n\n// WEBPACK FOOTER //\n// ./component/loan/bindingIdForm.js"],"sourceRoot":""}