{"version":3,"sources":["webpack:///./redux/saga/loanSagas.js?8a8e"],"names":["fetchLoanSaga","bindIdSaga","loanSagas","action","id","payload","call","data","put","fetchLoanSuccess","code","message","fetchLoanFailure","citizenId","platform","all","takeLatest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;kGAeiBA,a;mGAgBAC,U;mGAOAC,S;;AAtCjB;AACA;AASA;;AAKO,SAAUF,aAAV,CAAwBG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACIC,sBADJ,GACUD,OAAOE,OADjB,CACID,EADJ;AAEH;;AAFG;AAAA;AAAA,2BAIoB,wEAAAE,CACf,2DADe,EAEZ,8DAFY,eAEQF,EAFR,CAJpB;;AAAA;AAIOG,wBAJP;AAAA;AAAA,2BAQO,uEAAAC,CAAI,6EAAAC,CAAiB,EAAEF,UAAF,EAAjB,CAAJ,CARP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWSG,wBAXT,eAWSA,IAXT,EAWeC,OAXf,eAWeA,OAXf;AAAA;AAAA,2BAYO,uEAAAH,CAAI,6EAAAI,CAAiB,EAAEF,UAAF,EAAQC,gBAAR,EAAjB,CAAJ,CAZP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUV,UAAV,CAAqBE,MAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sCACiCA,OAAOE,OADxC,EACID,EADJ,mBACIA,EADJ,EACSS,SADT,mBACSA,SADT,EACqBC,QADrB,mBACqBA,QADrB;AAEH;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAUZ,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACG,uEAAAa,CAAI,CACN,8EAAAC,CAAW,+DAAX,EAAuBhB,aAAvB,CADM,EAEN,8EAAAgB,CAAW,4DAAX,EAAoBf,UAApB,CAFM,CAAJ,CADH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;4BAvBUD,a;4BAgBAC,U;4BAOAC,S","file":"3.7d10cc448df1046c0571.hot-update.js","sourcesContent":["import {takeLatest,all,call,put} from 'redux-saga/effects'\nimport {\n    FETCH_LOAN,\n    fetchLoanSuccess,\n    fetchLoanFailure,\n    BIND_ID,\n    bindId,\n    bindIdSuccess,\n    bindIdFailure\n} from '../ducks/loan'\nimport {\n    API_SERVER,\n    getJSON,\n} from '../../tools/api'\n\nexport function* fetchLoanSaga(action){\n    const {id} = action.payload\n    //use api to fetch data from apiV2\n    try {\n        const data = yield call(\n            getJSON,\n            `${API_SERVER}/chats/${id}`\n        )\n        yield put(fetchLoanSuccess({ data }))\n    }\n    catch(error){\n        const { code, message } = error\n        yield put(fetchLoanFailure({ code, message }))\n    }\n}\n\nexport function* bindIdSaga(action){\n    const {id , citizenId , platform} = action.payload\n    //use api to bind LINE/FACEBOOK ID with customerCitizenId\n}\n\n\n\nexport function* loanSagas() {\n    yield all([\n        takeLatest(FETCH_LOAN, fetchLoanSaga),\n        takeLatest(BIND_ID, bindIdSaga)\n    ])\n}\n\n\n// WEBPACK FOOTER //\n// ./redux/saga/loanSagas.js"],"sourceRoot":""}